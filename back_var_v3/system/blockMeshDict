/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    (-400 0 -228.5) 	        //0
    (-400 40 -228.5)	        //1
    (0 40 -228.5)		//2
    (0 0 -228.5)		//3

    (0 -26.7 -228.5)		//4
    (1400 -26.7 -228.5)		//5
    (1400 0 -228.5)	        //6
    (1400 40 -228.5)		//7

    (-400 0 228.5) 		//8
    (-400 40 228.5)		//9
    (0 40 228.5)		//10
    (0 0 228.5)			//11

    (0 -26.7 228.5)		//12
    (1400 -26.7 228.5)	        //13
    (1400 0 228.5)		//14
    (1400 40 228.5)		//15

);


blocks
(
    hex (0 3 2 1 8 11 10 9)
    (40 4 46)
    simpleGrading (1 1 1)

    hex (3 6 7 2 11 14 15 10)
    (140 4 46)
    simpleGrading (1 1 1)

    hex (6 3 4 5 14 11 12 13)
    (140 3 46)
    simpleGrading (1 1 1)


);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 1 8 9)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (5 6 13 14)
            (6 7 14 15)
        );
    }
    upperWall
    {
        type wall;
        faces
        (
            (1 2 10 9)
            (2 7 10 15)

        );
    }
    lowerWall
    {
        type wall;
        faces
        (
            (0 3 11 8)
            (4 5 13 12)
			(4 3 11 12)

        );
	}
    frontAndBack
    {
        type wall;
        faces
        (
            (0 1 2 3)
            (2 3 6 7)
            (3 4 5 6)
            (8 9 10 11)
            (10 11 14 15)
            (11 12 13 14)

        );
    }
);

/*
	interface1
	{
		type wall;
		faces
		(
			(2 3 8 11)
		);
	}

	interface2
	{
		type wall;
		faces
		(
			(3 6 11 14)
		);
	}
*/

// ************************************************************************* //
